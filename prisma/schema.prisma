generator client {
  provider      = "prisma-client-js"
  output        = "../src/generated/prisma"
  binaryTargets = ["native", "linux-musl", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id
  name          String
  email         String
  emailVerified Boolean   @default(false)
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now()) @updatedAt
  sessions      Session[]
  accounts      Account[]

  @@unique([email])
  @@map("user")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  @@map("account")
}

model Verification {
  id         String   @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt

  @@map("verification")
}

model ContactMessage {
  id        String   @id @default(cuid())
  firstName String
  lastName  String
  email     String
  phone     String
  subject   String?
  message   String
  createdAt DateTime @default(now())

  @@map("contact_message")
}

model CareerSubmission {
  id                       String   @id @default(cuid())
  role                     String
  firstName                String
  lastName                 String
  email                    String   @unique
  phone                    String   @unique
  cert3IndividualSupport   String
  ahpraRegistration        String?
  covidVaccinations        String
  influenzaVaccination     String
  workingWithChildrenCheck String
  ndisScreeningCheck       String
  policeCheck              String
  workingRights            String
  ndisModules              String
  firstAidCPR              String
  experience               String
  availability             Json
  resume                   String?
  certificates             String[]

  createdAt DateTime @default(now())

  @@map("career_submission")
}
